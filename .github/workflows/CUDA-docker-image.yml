name: biniou CUDA Docker Image CI

on:
  schedule:
    - cron: '40 2 * * 6'

  push:
    branches: [ "main" ]
    paths:
      - .github/workflows/CUDA-docker-image.yml

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-cuda
      
    - name: Build the CUDA Docker image
      run: docker build . --file CUDA/Dockerfile --tag biniou-cuda:$(date +%s)

    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
      with:
        context: "{{defaultContext}}:CUDA"
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v2
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}-cuda
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true

    - name: Delete outdated biniou-cuda containers
      uses: actions/delete-package-versions@v5
      with:
        package-name: 'biniou-cuda'
        package-type: 'container'
        min-versions-to-keep: 5

